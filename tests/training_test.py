import pandas as pd


def load_data(path):
    dtypes = {
        'MachineIdentifier': 'category',
        'ProductName': 'category',
        'EngineVersion': 'category',
        'AppVersion': 'category',
        'AvSigVersion': 'category',
        'IsBeta': 'int8',
        'RtpStateBitfield': 'float16',
        'IsSxsPassiveMode': 'int8',
        'DefaultBrowsersIdentifier': 'float16',
        'AVProductStatesIdentifier': 'float32',
        'AVProductsInstalled': 'float16',
        'AVProductsEnabled': 'float16',
        'HasTpm': 'int8',
        'CountryIdentifier': 'int16',
        'CityIdentifier': 'float32',
        'OrganizationIdentifier': 'float16',
        'GeoNameIdentifier': 'float16',
        'LocaleEnglishNameIdentifier': 'int8',
        'Platform': 'category',
        'Processor': 'category',
        'OsVer': 'category',
        'OsBuild': 'int16',
        'OsSuite': 'int16',
        'OsPlatformSubRelease': 'category',
        'OsBuildLab': 'category',
        'SkuEdition': 'category',
        'IsProtected': 'float16',
        'AutoSampleOptIn': 'int8',
        'PuaMode': 'category',
        'SMode': 'float16',
        'IeVerIdentifier': 'float16',
        'SmartScreen': 'category',
        'Firewall': 'float16',
        'UacLuaenable': 'float32',
        'Census_MDC2FormFactor': 'category',
        'Census_DeviceFamily': 'category',
        'Census_OEMNameIdentifier': 'float16',
        'Census_OEMModelIdentifier': 'float32',
        'Census_ProcessorCoreCount': 'float16',
        'Census_ProcessorManufacturerIdentifier': 'float16',
        'Census_ProcessorModelIdentifier': 'float16',
        'Census_ProcessorClass': 'category',
        'Census_PrimaryDiskTotalCapacity': 'float32',
        'Census_PrimaryDiskTypeName': 'category',
        'Census_SystemVolumeTotalCapacity': 'float32',
        'Census_HasOpticalDiskDrive': 'int8',
        'Census_TotalPhysicalRAM': 'float32',
        'Census_ChassisTypeName': 'category',
        'Census_InternalPrimaryDiagonalDisplaySizeInInches': 'float16',
        'Census_InternalPrimaryDisplayResolutionHorizontal': 'float16',
        'Census_InternalPrimaryDisplayResolutionVertical': 'float16',
        'Census_PowerPlatformRoleName': 'category',
        'Census_InternalBatteryType': 'category',
        'Census_InternalBatteryNumberOfCharges': 'float32',
        'Census_OSVersion': 'category',
        'Census_OSArchitecture': 'category',
        'Census_OSBranch': 'category',
        'Census_OSBuildNumber': 'int16',
        'Census_OSBuildRevision': 'int32',
        'Census_OSEdition': 'category',
        'Census_OSSkuName': 'category',
        'Census_OSInstallTypeName': 'category',
        'Census_OSInstallLanguageIdentifier': 'float16',
        'Census_OSUILocaleIdentifier': 'int16',
        'Census_OSWUAutoUpdateOptionsName': 'category',
        'Census_IsPortableOperatingSystem': 'int8',
        'Census_GenuineStateName': 'category',
        'Census_ActivationChannel': 'category',
        'Census_IsFlightingInternal': 'float16',
        'Census_IsFlightsDisabled': 'float16',
        'Census_FlightRing': 'category',
        'Census_ThresholdOptIn': 'float16',
        'Census_FirmwareManufacturerIdentifier': 'float16',
        'Census_FirmwareVersionIdentifier': 'float32',
        'Census_IsSecureBootEnabled': 'int8',
        'Census_IsWIMBootEnabled': 'float16',
        'Census_IsVirtualDevice': 'float16',
        'Census_IsTouchEnabled': 'int8',
        'Census_IsPenCapable': 'int8',
        'Census_IsAlwaysOnAlwaysConnectedCapable': 'float16',
        'Wdft_IsGamer': 'float16',
        'Wdft_RegionIdentifier': 'float16',
        'HasDetections': 'int8'
    }

    columns = [
        'EngineVersion',
        'AppVersion',
        'AvSigVersion',
        'AVProductsInstalled',
        'HasTpm',
        'Platform',
        'Processor',
        'OsVer',
        'OsBuild',
        'OsSuite',
        'OsPlatformSubRelease',
        'OsBuildLab',
        'SkuEdition',
        'IsProtected',
        'IsSxsPassiveMode',
        'AutoSampleOptIn',
        'PuaMode',
        'LocaleEnglishNameIdentifier',
        'CountryIdentifier',
        'SMode',
        'SmartScreen',
        'Firewall',
        'UacLuaenable',
        'Census_MDC2FormFactor',
        'Census_DeviceFamily',
        'Census_ProcessorCoreCount',
        'Census_PrimaryDiskTotalCapacity',
        'Census_PrimaryDiskTypeName',
        'Census_SystemVolumeTotalCapacity',
        'Census_HasOpticalDiskDrive',
        'Census_TotalPhysicalRAM',
        'Census_ChassisTypeName',
        'Census_InternalPrimaryDiagonalDisplaySizeInInches',
        'Census_InternalPrimaryDisplayResolutionHorizontal',
        'Census_InternalPrimaryDisplayResolutionVertical',
        'Census_PowerPlatformRoleName',
        'Census_InternalBatteryType',
        'Census_InternalBatteryNumberOfCharges',
        'Census_OSVersion',
        'Census_OSArchitecture',
        'Census_OSBranch',
        'Census_OSBuildNumber',
        'Census_OSBuildRevision',
        'Census_OSEdition',
        'Census_OSSkuName',
        'Census_OSWUAutoUpdateOptionsName',
        'Census_IsPortableOperatingSystem',
        'Census_GenuineStateName',
        'Census_ActivationChannel',
        'Census_IsFlightsDisabled',
        'Census_IsSecureBootEnabled',
        'Census_IsVirtualDevice',
        'Census_IsTouchEnabled',
        'Census_IsPenCapable',
        'Wdft_IsGamer',
        'HasDetections'
    ]

    num_rows = 5000
    train = pd.read_csv(path, dtype=dtypes, usecols=columns, low_memory=True, nrows=num_rows)
    train.dropna()
    train = train.drop(['EngineVersion', 'OsBuildLab', 'HasTpm', 'AutoSampleOptIn', 'UacLuaenable',
                        'Census_DeviceFamily', 'Census_IsPortableOperatingSystem', 'Census_IsFlightsDisabled',
                        'Census_IsVirtualDevice', 'Census_OSSkuName', 'OsVer', 'Census_OSArchitecture', 'SMode',
                        'PuaMode', 'Census_InternalBatteryType'],
                       axis=1)

    columns_to_lower = ['Processor', 'OsPlatformSubRelease', 'Census_MDC2FormFactor', 'SkuEdition',
                        'Census_PrimaryDiskTypeName', 'Census_ChassisTypeName',
                        'Census_OSBranch', 'Census_PowerPlatformRoleName', 'Census_OSEdition',
                        'Census_OSWUAutoUpdateOptionsName', 'SmartScreen',
                        'Census_GenuineStateName', 'Census_ActivationChannel']

    columns_fillna = ['Census_PrimaryDiskTypeName', 'Census_PowerPlatformRoleName', 'SmartScreen',
                      'Census_ChassisTypeName']

    columns_to_replace = {
        'Census_PrimaryDiskTypeName': [(['unspecified'], 'unknown')],
        'Census_ChassisTypeName': [(['unknown', '30', '0', '35', '32', '31', '88', '127', '25', '36', '44', '45', '76',
                                     '49', '28', '82', 'iotgateway', 'compactpci', 'dockingstation', 'expansionchassis',
                                     'subchassis', 'sealedcasepc', 'pizzabox', 'blade', 'multisystemchassis', 'stickpc',
                                     'subnotebook', 'busexpansionchassis', 'bladeenclosure', '81', '112', '39',
                                     'embeddedpc'], 'other')],
        'Census_PowerPlatformRoleName': [(['unspecified'], 'unknown')],
        'SmartScreen': [(['&#x01;', '&#x02;', 'absent', '0', 'deny', 'absent', 'ting', 'existsnotset', 'block', 'block',
                          'not-there', '&#x03;', '00000000'], 'unknown'),
                        (['requireadmin', 'RequiredAdmin', 'Admin'], 'requireadmin'),
                        (['prompt', 'Promt', 'promt', 'warn'], 'warn'),
                        (['Enabled', 'enabled'], 'on'),
                        (['off', 'of'], 'off')
                        ],
        'Census_GenuineStateName': [(['_'], '')]
    }

    for col in columns_to_lower:
        train[col] = train[col].str.lower()

    for col in columns_fillna:
        train[col] = train[col].fillna('unknown')

    for key, value in columns_to_replace.items():
        for item in value:
            train[key] = train[key].replace(item[0], item[1])

    return train
